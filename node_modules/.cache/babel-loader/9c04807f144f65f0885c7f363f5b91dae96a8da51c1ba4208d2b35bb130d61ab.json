{"ast":null,"code":"var _jsxFileName = \"/Users/samtiahmed/Desktop/VG2/Utvikling/rydde-app/rydde-app-react/src/components/Homepage/Tasks/Tasks.js\",\n  _s = $RefreshSig$();\nimport './Tasks.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks(props) {\n  _s();\n  const [chores, setChores] = useState([]);\n  useEffect(() => {\n    async function getChores() {\n      const response = await fetch('/api/undoneChores');\n      let data = await response.json();\n      data = data.map(chore => {\n        return {\n          choreId: chore.ChoreID,\n          choreName: chore.ChoreName,\n          choreDescription: chore.Description,\n          chorePoints: chore.Points,\n          assignedUserID: chore.AssignedUserID,\n          assignedUserName: chore.Username\n        };\n      });\n      setChores(data);\n    }\n    getChores();\n  }, []);\n  const handleTaskSubmit = async (event, task) => {\n    event.preventDefault();\n    if (window.confirm('Are you sure you want to finish this task?')) {\n      const date = new Date();\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0'); // January is 0!\n      const year = date.getFullYear();\n      const currentDate = `${day}:${month}:${year}`;\n      console.log(currentDate);\n      const response = await fetch('/api/finishChore', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          choreId: task\n        })\n      });\n      const data = await response.json();\n      if (data.message === 'Success') {\n        alert('Task finished!');\n        window.location.reload();\n      } else {\n        alert('Error finishing task');\n      }\n    }\n  };\n  const handleShowMore = async (e, choreDes) => {\n    e.preventDefault();\n    alert(`Task Description: \\n${choreDes}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-child tasks-container\",\n    style: props.isParent === 0 ? {\n      gridColumn: '10 / span 21'\n    } : {},\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskss-container\",\n      children: chores.map(chore => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"task\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: event => handleTaskSubmit(event, chore.choreId),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-task-name\",\n            type: \"text\",\n            value: `${chore.choreName}`,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-task-point\",\n            type: \"text\",\n            value: `${chore.chorePoints} points`,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: event => handleShowMore(event, chore.choreDescription),\n              className: \"show-more-button\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa-solid fa-info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 141\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)\n      }, chore.choreID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }, this);\n}\n_s(Tasks, \"ZtUGKh47c1RKsRnaxOCnQHyFUGs=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Tasks","props","_s","chores","setChores","getChores","response","fetch","data","json","map","chore","choreId","ChoreID","choreName","ChoreName","choreDescription","Description","chorePoints","Points","assignedUserID","AssignedUserID","assignedUserName","Username","handleTaskSubmit","event","task","preventDefault","window","confirm","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","currentDate","console","log","method","headers","body","JSON","stringify","message","alert","location","reload","handleShowMore","e","choreDes","className","style","isParent","gridColumn","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","readOnly","onClick","class","choreID","_c","$RefreshReg$"],"sources":["/Users/samtiahmed/Desktop/VG2/Utvikling/rydde-app/rydde-app-react/src/components/Homepage/Tasks/Tasks.js"],"sourcesContent":["import './Tasks.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction Tasks(props) {\n    const [chores, setChores] = useState([]);\n\n\n    useEffect(() => {\n        async function getChores() {\n            const response = await fetch('/api/undoneChores');\n            let data = await response.json();\n\n            data = data.map((chore) => {\n                return {\n                    choreId: chore.ChoreID,\n                    choreName: chore.ChoreName,\n                    choreDescription: chore.Description,\n                    chorePoints: chore.Points,\n                    assignedUserID: chore.AssignedUserID,\n                    assignedUserName: chore.Username\n                }\n            });\n            setChores(data);\n        }\n        getChores();\n    }, []);\n\n\n    const handleTaskSubmit = async (event, task) => {\n        event.preventDefault();\n\n        if (window.confirm('Are you sure you want to finish this task?')) {\n            const date = new Date();\n            const day = String(date.getDate()).padStart(2, '0');\n            const month = String(date.getMonth() + 1).padStart(2, '0'); // January is 0!\n            const year = date.getFullYear();\n            \n            const currentDate = `${day}:${month}:${year}`;\n            console.log(currentDate);\n\n            const response = await fetch('/api/finishChore', {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    choreId: task\n                })\n            });\n\n            const data = await response.json();\n\n            if (data.message === 'Success') {\n                alert('Task finished!');\n                window.location.reload();\n            } else {\n                alert('Error finishing task');\n            }\n        }\n    };\n\n    const handleShowMore = async (e, choreDes) => {\n        e.preventDefault();\n\n        alert(`Task Description: \\n${choreDes}`)\n    };\n\n\n        return ( \n            <div className='grid-child tasks-container' style={props.isParent === 0 ? { gridColumn: '10 / span 21' } : {}}>\n                <h2>Tasks</h2>\n                <div className='taskss-container'>\n                    {chores.map((chore) => (\n                        <section key={chore.choreID} className='task'>\n                            <form onSubmit={(event) => handleTaskSubmit(event, chore.choreId)}>\n                                <input className='input-task-name' type='text' value={`${chore.choreName}`} readOnly/>\n                                <input className='input-task-point' type='text' value={`${chore.chorePoints} points`} readOnly/>\n                                <div>\n                                    <button onClick={(event) => handleShowMore(event, chore.choreDescription)} className='show-more-button'><i class=\"fa-solid fa-info\"></i></button>\n                                    <button type='submit'><i className=\"fa-solid fa-check\"></i></button>\n                                </div>\n                            </form>\n                        </section>\n                    ))}\n                    {/* <section className='task'>\n                        <form onSubmit={handleTaskSubmit}>\n                            <input type='text' value={'Wash man'} readOnly/>\n\n                            <button type='submit'><i class=\"fa-solid fa-check\"></i></button>\n                        </form>\n                    </section> */}\n                </div>\n            </div>\n         );\n    }\n\nexport default Tasks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}